<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.cloudera.navopt</groupId>
  <artifactId>navopt-dbus-service</artifactId>
  <name>Cloudera Navigator Optimizer :: Dbus Service</name>
  <version>0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <maven.compiler.source>1.8</maven.compiler.source>
    <maven.compiler.target>1.8</maven.compiler.target>
    <mainClass>com.cloudera.navopt.Main</mainClass>
    <cdx.version>5.11.1</cdx.version>
    <serviceName>navopt</serviceName>
    <!--
      inherited from the dbus-consumer-client dependency
    -->
    <skip-dependency-convergence>true</skip-dependency-convergence>
  </properties>

  <repositories>
    <!--
      We override 'central' to avoid external resource dependencies during
      the build. If you need an artefact from an obscure repository, you can
      file a Thunderhead JIRA to get it added to the mirror server.
    -->
    <repository>
      <id>central</id>
      <name>Central Repository</name>
      <url>http://maven.jenkins.cloudera.com:8081/artifactory/cloudera-mirrors</url>
      <layout>default</layout>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>cloudera.repo</id>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
      <name>Cloudera Repository</name>
    </repository>
    <repository>
      <id>internal.cdh.releases.repo</id>
      <url>http://maven.jenkins.cloudera.com:8081/artifactory/libs-release-local</url>
      <name>Releases Repository</name>
    </repository>
    <repository>
      <id>internal.cdh.snapshots.repo</id>
      <url>http://maven.jenkins.cloudera.com:8081/artifactory/libs-snapshot-local</url>
      <name>Snapshots Repository</name>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
  </repositories>

  <dependencies>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.5</version>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>1.2.1</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>com.amazonaws</groupId>
      <artifactId>amazon-kinesis-client</artifactId>
      <version>1.7.4</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.dataformat</groupId>
          <artifactId>jackson-dataformat-cbor</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.google.protobuf</groupId>
          <artifactId>protobuf-java</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-cbor</artifactId>
      <version>2.8.7</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.cloudera.thunderhead</groupId>
      <artifactId>sigma-common</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.cloudera.thunderhead</groupId>
      <artifactId>dbus-consumer-client</artifactId>
      <version>${project.version}</version>
      <classifier>jar-with-dependencies</classifier>
    </dependency>
    <dependency>
      <groupId>com.cloudera.cdx</groupId>
      <artifactId>cdx-model</artifactId>
      <version>${cdx.version}</version>
    </dependency>
    <dependency>
      <groupId>com.cloudera.cdx</groupId>
      <artifactId>cdx-importer</artifactId>
      <version>${cdx.version}</version>
    </dependency>
    <dependency>
      <groupId>com.cloudera.cmf</groupId>
      <artifactId>protocol</artifactId>
      <version>${cdx.version}</version>
      <exclusions>
        <exclusion>
          <groupId>commons-logging</groupId>
          <artifactId>commons-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.rabbitmq</groupId>
      <artifactId>amqp-client</artifactId>
      <version>4.1.0</version>
    </dependency>
    <dependency>
      <groupId>ca.szc.configparser</groupId>
      <artifactId>java-configparser</artifactId>
      <version>0.2</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish</groupId>
      <artifactId>javax.json</artifactId>
      <version>1.0.4</version>
    </dependency>
    <dependency>
      <groupId>com.googlecode.json-simple</groupId>
      <artifactId>json-simple</artifactId>
      <version>1.1</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.0</version>
      <scope>compile</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>copy-dependencies</id>
                    <phase>prepare-package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        <overWriteReleases>false</overWriteReleases>
                        <overWriteSnapshots>false</overWriteSnapshots>
                        <overWriteIfNewer>true</overWriteIfNewer>
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-jar-plugin</artifactId>
            <configuration>
                <archive>
                    <manifest>
                        <addClasspath>true</addClasspath>
                        <classpathPrefix>lib/</classpathPrefix>
                        <mainClass>fully.qualified.main</mainClass>
                    </manifest>
                </archive>
            </configuration>
        </plugin>
    </plugins>
  </build>

</project>
