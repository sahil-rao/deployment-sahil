description "Redis Server"
author "Prithviraj Pandian <prithvi@xplain.io>"

# Run when local FS becomes available
start on local-filesystems
stop on shutdown

# Daemonize is set to yes in redis.conf so that redis can write its pid to /var/run (for monit)
expect fork

# Respawn unless redis dies 10 times in 5 seconds
respawn
respawn limit 10 5

# Run redis as correct user, instead of root
# Will not work on Ubuntu 12
setuid redis
setgid redis


post-start script

    # If we are not new, we need to find a master to become a slave of
    new=$(/usr/local/bin/new_set.sh)
    if [ "x$new" = "xno" ]; then
        masterip=$(/usr/local/bin/get_master_ip.sh)
	# Slave myself to this master
	redis-cli slaveof $masterip 6379
    fi

    # Set up DNS registration crontab now that we've been identified as a master or slave.
    # This has to happen after we check our replication, else there is a race condition (because Redis always boots as master)
    (crontab -l || true; echo "* * * * * /bin/bash /usr/local/bin/register_host.sh >>/var/log/register_host.log 2>&1") 2>&1 | grep -v "no crontab" | sort | uniq | crontab -
    # Set up hourly backup crontab
    (crontab -l || true; echo "5 * * * * /bin/bash /usr/local/bin/do_backup.sh >>/var/log/do_backup.log 2>&1") 2>&1 | grep -v "no crontab" | sort | uniq | crontab -

end script


pre-stop script

    # Clean up our crontab
    crontab -r

end script


exec /usr/bin/redis-server /etc/redis/local/redis.conf
