# Ubuntu upstart file at /etc/init/mongodb.conf

limit nofile 20000 20000
kill timeout 10

pre-start script

  /usr/local/bin/wait_for_navoptenv.sh
  /usr/local/bin/disable_transparent_hugepages.sh

  mkdir -p /var/mongodb/run
  chown -R mongodb.mongodb /var/mongodb/run

  mkdir -p /var/mongodb/lib /var/run/mongodb
  chown -R mongodb.mongodb /var/run/mongodb

end script


post-start script

  echo "Waiting for mongo to come online...."

  # wait for listen on port 27017, if this fails we are fucked anyway
  while ! nc -q0 localhost 27017 </dev/null >/dev/null 2>&1; do
    sleep 1;
  done

  echo "Finished waiting"

  /usr/local/bin/join_mongo_cluster.sh

  # Set up DNS registration crontab now that we've been identified as a master or slave.
  (crontab -l || true; echo "* * * * * /bin/bash /usr/local/bin/register_host.sh >>/var/log/register_host.log 2>&1") 2>&1 | grep -v "no crontab" | sort | uniq | crontab -
  # Set up hourly backup crontab
  (crontab -l || true; echo "*/30 * * * * /bin/bash /usr/local/bin/do_backup.sh >>/var/log/do_backup.log 2>&1") 2>&1 | grep -v "no crontab" | sort | uniq | crontab -
  # Set up cluster cleanup (in case of unreachable/unhealthy slave)
  (crontab -l || true; echo "*/15 * * * * /bin/bash /usr/local/bin/cleanup_replicas.sh >>/var/log/cleanup_replicas.log 2>&1") 2>&1 | grep -v "no crontab" | sort | uniq | crontab -

end script


pre-stop script

  /usr/bin/mongo --eval "if( rs.isMaster()) { rs.stepDown() }"

end script


start on runlevel [2345]
stop on runlevel RUNLEVEL=0 PREVLEVEL=2


script

  set_name=$(/usr/local/bin/get_silo_name.sh)
  echo "Starting server with replica set name [\"$set_name\"]"
  exec start-stop-daemon \
    --start \
    --make-pidfile \
    --pidfile /var/run/mongodb/mongodb.pid \
    --chuid mongodb \
    --exec /usr/bin/mongod \
    -- \
    --rest \
    --config /etc/mongod.conf \
    --replSet $set_name \
    --journal

end script
