syntax = "proto3";

package navopt;

import "version.proto";

// For future compatibility, all rpcs must take a request and return a response
// even if there is initially no content for these messages.
service NavOpt {
  // Request for a new tenant.
  rpc createTenant (CreateTenantRequest)
    returns (CreateTenantResponse) {}
  // Request for get S3 URL.
  rpc getS3url (GetS3urlRequest)
    returns (GetS3urlResponse) {}
  // Request for get tables.
  rpc getTenant (GetTenantRequest)
    returns (GetTenantResponse) {}
  // Request for top databases.
  rpc getTopDataBases (GetTopDataBasesRequest)
    returns (GetTopDataBasesResponse) {}
  // Request for get tables.
  rpc getTopTables (GetTopTablesRequest)
    returns (GetTopTablesResponse) {}
  rpc getTopQueries (GetTopQueriesRequest)
    returns (GetTopQueriesResponse) {}
  rpc getTopColumns (GetTopColumnsRequest)
    returns (GetTopColumnsResponse) {}
  rpc getTopFilters (GetTopFiltersRequest)
    returns (GetTopFiltersResponse) {}
  // Request for top joins.
  rpc getTopJoins (GetTopJoinsRequest)
    returns (GetTopJoinsResponse) {}
  rpc getTopAggs (GetTopAggsRequest)
    returns (GetTopAggsResponse) {}
  rpc getDesignBucket (GetDesignBucketRequest)
    returns (GetDesignBucketResponse) {}
  rpc getHAQR (GetHAQRRequest)
    returns (GetHAQRResponse) {}
  // Request for Compatibility Info.
  rpc getQueryCompatible (GetQueryCompatibleRequest)
    returns (GetQueryCompatibleResponse) {}
  // Request for Query Risk Info.
  rpc getQueryRisk (GetQueryRiskRequest)
    returns (GetQueryRiskResponse) {}
  // Request for Query Similarity Info.
  rpc getSimilarQueries (GetSimilarQueriesRequest)
    returns (GetSimilarQueriesResponse) {}
  // Request a new upload.
  rpc upload (UploadRequest)
    returns (UploadResponse) {}
  // Request upload status.
  rpc uploadStatus (UploadStatusRequest)
    returns (UploadStatusResponse) {}
  // Request upload status.
  rpc workloadInfo (WorkloadInfoRequest)
    returns (WorkloadInfoResponse) {}
  // Request upload status.
  rpc getQueries (GetQueriesRequest)
    returns (GetQueriesResponse) {}
  // Request upload status.
  rpc getQueriesDetail (GetQueriesDetailRequest)
    returns (GetQueriesDetailResponse) {}
   // Request upload status.
  rpc getTables (GetTablesRequest)
    returns (GetTablesResponse) {}
  // Request upload status.
  rpc getTablesDetail (GetTablesDetailRequest)
    returns (GetTablesDetailResponse) {}
  // Request upload status.
  rpc getColumns (GetColumnsRequest)
    returns (GetColumnsResponse) {}
  // Request upload status.
  rpc getColumnsDetail (GetColumnsDetailRequest)
    returns (GetColumnsDetailResponse) {}
}

message CreateTenantRequest {
  string userGroup = 1;
}

message CreateTenantResponse {
  string tenant = 1;
}

message GetS3urlRequest {
  string tenant = 1;
  string fileName = 2;
}

message GetS3urlResponse {
  string url = 1;
}

message GetTenantRequest {
  string email = 1;
}

message GetTenantResponse {
  string tenant = 1;
}

message GetTopDataBasesRequest {
  string tenant = 1;
  int32 limit = 2;
}

// Top table info for a given table
message TopDataBases {
  int32 instanceCount = 1;
  string dbName = 2;
  int32 totalTableCount = 3;
  int32 totalQueryCount = 4;
  int32 workloadPercent = 5;
  string eid = 6;
}

message GetTopDataBasesResponse {
  repeated TopDataBases results = 1;
}

message GetTopTablesRequest {
  string tenant = 1;
  string dbName = 2;
  int32 limit = 3;
}

message TopTables {
  int32 columnCount = 1;
  string name = 2;
  int32 patternCount = 3;
  int32 workloadPercent = 4;
  int32 total = 5;
  string type = 6;
  string eid = 7;
}

message GetTopTablesResponse {
  repeated TopTables results = 1;
}

message GetTopQueriesRequest {
  string tenant = 1;
  int32 limit = 2;
}

message TopQueries {
  bool impalaCompatible = 1;
  bool hiveCompatible = 2;
  int32 instanceCount = 3;
  int32 elapsedTime = 4;
  string customId = 5;
  string complexity = 6;
  string qid = 7;
  repeated string querySignature = 8;
}

message GetTopQueriesResponse {
  repeated TopQueries results = 1;
}

message GetTopColumnsRequest {
  string tenant = 1;
  string dbName = 2;
  string tableName = 3;
  repeated string dbTableList = 4;
  int32 limit = 5;
}

message TopColumns {
  int32 columnCount = 1;
  string columnName = 2;
  int32 groupbyCol = 3;
  int32 selectCol = 4;
  int32 filterCol = 5;
  string tid = 6;
  string cid = 7;
  int32 joinCol = 8;
  int32 orderbyCol = 9;
  string tableType = 10;
  string tableName = 11;
  int32 workloadPercent = 12;
  string dbName = 13;
}

message GetTopColumnsResponse {
  repeated TopColumns groupbyColumns = 1;
  repeated TopColumns joinColumns = 2;
  repeated TopColumns selectColumns = 3;
  repeated TopColumns orderbyColumns = 4;
  repeated TopColumns filterColumns = 5;
}

message GetTopFiltersRequest {
  string tenant = 1;
  string dbName = 2;
  string tableName = 3;
  repeated string colList = 4;
  repeated string dbTableList = 5;
  int32 limit = 6;
}

message ValGroup {
  string columnName = 1;
  bool isLiteral = 2;
  string literal = 3;
  string op = 4;
}

message PopValue {
  int32 count = 1;
  repeated ValGroup group = 2;
}

message TopFilters {
  int32 totalQueryCount = 1;
  repeated string columns = 2;
  repeated string qids = 3;
  string tableName = 4;
  string tid = 5;
  repeated PopValue popularValues = 6;
}

message GetTopFiltersResponse {
  repeated TopFilters results = 1;
}

message GetTopJoinsRequest {
  string tenant = 1;
  repeated string dbTableList = 2;
  int32 limit = 3;
}

message JoinCols {
  repeated string columns = 1;
}

// List of Top Joins
message TopJoins {
  repeated JoinCols joinCols = 1;
  repeated string queryIds = 2;
  repeated string tables = 3;
  int32 totalQueryCount = 4;
  int32 totalTableCount = 5;
  string joinType = 6;
  string dbName = 7;
}

message GetTopJoinsResponse {
  repeated TopJoins results = 1;
}

message GetTopAggsRequest {
  string tenant = 1;
  repeated string dbTableList = 2;
  int32 limit = 3;
}

message AggInfo {
  string columnName = 1;
  string tableName = 2;
  string databaseName = 3;
}

message TopAgg {
  string aggregateClause = 1;
  string aggregateFunction = 2;
  string functionType = 3;
  string location = 4;
  int32 totalQueryCount = 5;
  repeated AggInfo aggregateInfo = 6;
}

message GetTopAggsResponse {
  repeated TopAgg results = 1;
}

message GetQueryCompatibleRequest {
  string tenant = 1;
  string query = 2;
  string sourcePlatform = 3;
  string targetPlatform = 4;
}

// Query Level incompatiblity info
message QueryError {
  string encounteredString = 1;
  string errorString = 2;
  string expectedString = 3;
}

// Query parts that have errors
message HighLightInfo {
  int32 column = 1;
  int32 lineNum = 2;
  int32 tokenRank = 3;
  int32 offset = 4;
}

// Clause Level incompatiblity info
message ClauseError {
  // Details for start of query string that has error
  HighLightInfo startLocator = 1;
  // Details for end of query string that has error
  HighLightInfo endLocator = 2;
}

message GetQueryCompatibleResponse {
  string clauseName = 1;
  string clauseString = 2;
  ClauseError clauseError = 3;
  QueryError queryError = 4;
  string status = 5;
  string parseError = 6;
}

message GetQueryRiskRequest {
  string tenant = 1;
  string query = 2;
  string sourcePlatform = 3;
}

message RiskData {
  string risk = 1;
  string riskAnalysis = 2;
  string riskRecommendation = 3;
}

message GetQueryRiskResponse {
  RiskData hiveRisk = 1;
  RiskData impalaRisk = 2;
}

message GetDesignBucketRequest {
  string tenant = 1;
}

message DesignBucket {
  string bucketName = 1;
  int32 numQueries = 2;
  int32 numTables = 3;
  string description  = 4;
}

message GetDesignBucketResponse {
  repeated DesignBucket results = 1;
}

message GetSimilarQueriesRequest {
  string tenant = 1;
  string query = 2;
  string sourcePlatform = 3;
}

message GetSimilarQueriesResponse {
  int32 orderByCount = 1;
  int32 groupByCount = 2;
  int32 hiveCompatible = 3;
  repeated QueryTable table = 4;
  repeated string querySignature = 5;
  int32 selectCount = 6;
  int32 unionCount = 7;
  int32 unionAllCount = 8;
  string StmtSignature = 9;
  int32 instanceCount = 10;
  int32 filterCount = 11;
  int32 joinCount = 12;
  string customId = 13;
  string qid = 14;
  string query = 15;
  int32 impalaCompatible = 16;
}

message GetHAQRRequest {
  string tenant = 1;
}

message IncompatibleQueries {
  string qid = 1;
  int32 fromError = 2;
  int32 whereError = 3;
  int32 selectError = 4;
  int32 orderbyError = 5;
  int32 groupbyError = 6;
  int32 otherError = 7;
  repeated string fromClauses = 8;
  repeated string whereClauses = 9;
  repeated string selectClauses = 10;
  repeated string orderbyClauses = 11;
  repeated string groupbyClauses = 12;
  repeated string otherClauses = 13;
}

message GetHAQRResponse {
  repeated IncompatibleQueries impala = 1;
  repeated IncompatibleQueries hive = 2;
}

message UploadStatus {
  enum UploadState {
    WAITING = 0;
    IN_PROGRESS = 1;
    PROCESSING = 2;
    FINISHED = 3;
    FAILED = 4;
  }
  UploadState state = 1;
  string workloadId = 2;
  string errorMsg = 3;
}

message HeaderField {
  enum ColType {
    NONE = 0;
    SQL_ID = 1;
    SQL_QUERY = 2;
  }
  ColType coltype = 1;
  string name = 2;
  string tag = 3;
  bool use = 4;
  int32 count = 5;
}

message UploadRequest {
  enum FileType {
    QUERY = 0;
    TABLE_STATS = 1;
    COLUMN_STATS = 2;
  }
  string tenant = 1;
  string fileLocation = 2;
  string sourcePlatform = 3;
  string rowDelim = 4;
  string colDelim = 5;
  string fileName = 6;
  string s3location = 7;
  repeated HeaderField headerFields = 8;
  FileType fileType = 9;
}

message UploadResponse {
  UploadStatus status = 1;
}

message UploadStatusRequest {
  string tenant = 1;
  string workloadId = 2;
}

message UploadStatusResponse {
  UploadStatus status = 1;
}

message WorkloadInfoRequest {
  string tenant = 1;
  string workloadId = 2;
  bool inActive = 3;
  bool details = 4;
}

message WorkloadData {
  uint32 queries = 1;
  string workloadId = 2;
  string workloadName = 3;
  uint32 processed_queries = 4;
  bool active = 5;
  string source_platform = 6;
  string tenant = 7;
  uint64 timestamp = 8;
  string etype = 9;
}

message WorkloadInfoResponse {
  repeated WorkloadData results = 1;
}

message GetQueriesRequest {
  string tenant = 1;
  string startingToken = 2;
}

message QueryData {
  string qid = 1;
  string query = 2;
}

message GetQueriesResponse {
  repeated QueryData results = 1;
  string nextToken = 2;
}

message GetQueriesDetailRequest {
  string tenant = 1;
  string qid = 2;
}

message QueryTable {
  string tableType = 1;
  string tableName = 2;
  string tid = 3;
  string dbName = 4;
}

message GetQueriesDetailResponse {
  int32 orderByCount = 1;
  int32 groupByCount = 2;
  int32 hiveCompatible = 3;
  repeated QueryTable table = 4;
  repeated string querySignature = 5;
  int32 selectCount = 6;
  int32 unionCount = 7;
  int32 unionAllCount = 8;
  string StmtSignature = 9;
  int32 instanceCount = 10;
  int32 filterCount = 11;
  int32 joinCount = 12;
  string customId = 13;
  string qid = 14;
  string query = 15;
  int32 impalaCompatible = 16;
}

message GetTablesRequest {
  string tenant = 1;
  string startingToken = 2;
}

message TableData {
  string tid = 1;
  string name = 2;
}

message GetTablesResponse {
  repeated TableData results = 1;
  string nextToken = 2;
}

message GetTablesDetailRequest {
  string tenant = 1;
  string tid = 2;
  string dbName = 3;
  string tableName = 4;
}

message TableStats {
  string numRows = 1;
  string avgRowLen = 2;
  string rowRange = 3;
  string tableName = 4;
}

message ColStats {
  string avgColLen = 1;
  string numNulls = 2;
  string cid = 3;
  string dataType = 4;
  string numDistinct = 5;
  string columnName = 6;
}

// Joined Tables
message JoinTables {
  string tableName = 1;
  string tableEid = 2;
  int32 joinpercent = 3;
  int32 numJoins = 4;
  repeated string joinColumns = 5;
}

// Query List data
message QueryList {
  string query = 1;
  string qid = 2;
  int32 queryCount = 3;
  repeated string queryChar = 4;
  bool impalaCompatible = 5;
  bool hiveCompatible = 6;
  string complexity = 7;
}

// Top Join Columns
message TopCols {
  int32 score = 1;
  string name = 2;
}

message GetTablesDetailResponse {
  int32 columnCount = 1;
  int32 createCount = 2;
  int32 selectCount = 3;
  int32 updateCount = 4;
  int32 queryCount = 5;
  int32 insertCount = 6;
  int32 deleteCount = 7;
  int32 joinCount = 8;
  TableStats tableStats = 9;
  repeated ColStats colStats = 10;
  string name = 11;
  string tid = 12;
  string type = 13;
  string table_ddl = 14;
  string iview_ddl = 15;
  string view_ddl = 16;
  repeated QueryList queryList = 17;
  repeated TopCols topJoinCols = 18;
  repeated JoinTables joinTables = 19;
  int32 workloadPercent = 20;
  repeated TopCols topCols = 21;
}

message GetColumnsRequest {
  string tenant = 1;
  string startingToken = 2;
}

message ColumnData {
  string cid = 1;
  string name = 2;
}

message GetColumnsResponse {
  repeated ColumnData results = 1;
  string nextToken = 2;
}

message GetColumnsDetailRequest {
  string tenant = 1;
  string cid = 2;
}

message GetColumnsDetailResponse {
  string columnName = 1;
  repeated ColStats colStats = 2;
  string tid = 3;
  string cid = 4;
  string tableName = 5;
}
