---
# This Playbook would deploy the whole Baazdata cluster with replication and sharding.
# Test

- hosts: localhost
  tasks:
  #copy config files.
  - name: Copy hosts.cfg
    copy: src=/home/xplain/hosts.cfg dest=/var/Baaz/hosts.cfg
  - name: Copy application-api.cfg
    copy: src=/home/xplain/application-api.cfg dest=/etc/xplain/application-api.cfg
  - name: Copy targe_platforms.cfg
    copy: src=/home/xplain/target_platforms.cfg dest=/etc/xplain/target_platforms.cfg
  - name: Copy adv_analytics.cfg
    copy: src=/home/xplain/adv_analytics.cfg dest=/etc/xplain/adv_analytics.cfg
  - name: Copy analytics.cfg
    copy: src=/home/xplain/analytics.cfg dest=/etc/xplain/analytics.cfg
  - name: Copy rules.cfg
    copy: src=/home/xplain/rules.cfg dest=/etc/xplain/rules.cfg
  - name: Copy rule_workflows.cfg
    copy: src=/home/xplain/rule_workflows.cfg dest=/etc/xplain/rule_workflows.cfg
  #Should eventually replace this script with package manager
  - name: Copy rabbit install script
    copy: src=installrabbit.sh dest=/home/xplain/installrabbit.sh owner=root group=root mode=0744
  #Commented out but may be needed later when we can figure out how to make sure it's installed already
  #- name: Install Erlang and RabbitMQ from source. This will take some time.
  #  command: ./installrabbit.sh chdir=/home/xplain/

  # Setting up clustering erlang cookie
  - name: create cookie directory
    file: path=/var/lib/rabbitmq owner=rabbitmq group=rabbitmq mode=0755 state=directory
  - name: add rabbitmq erlang cookie
    template: src=erlang.cookie.j2 dest=/var/lib/rabbitmq/.erlang.cookie owner=rabbitmq group=rabbitmq mode=0400
    register: erlang_cookie
  #Set up web UI plugin, port 15672 must be open
  - name: Adding web management plugin
    rabbitmq_plugin: names=rabbitmq_management state=enabled
  - name: restart rabbitmq
    service: name=rabbitmq-server state=restarted

  #Setting up user permissions
  - name: Add virtualhost 'xplain'
    rabbitmq_vhost: name=xplain state=present
  - name: Add user 'xplain' with password 'xplain' with full privileges
    rabbitmq_user: user=xplain
                   password=xplain
                   vhost=xplain
                   configure_priv=.*
                   read_priv=.*
                   write_priv=.*
                   state=present
  #login to management UI with this user/password info
  - name: Add user 'rabbitmonitor' with password 'monitor123' as administrator
    rabbitmq_user: user=xplain
                   password=xplain
                   vhost=xplain
                   configure_priv=.*
                   read_priv=.*
                   write_priv=.*
                   tags=administrator
                   state=present


  - name: Start Mongo
    shell:

    sudo: yes
    ignore_errors: True

  - name: Add JRE ppa
    apt_repository: repo=ppa:webupd8team/java state=present
  - name: Automatically select the Oracle License
    shell: echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
  - name: Install JRE
    apt: pkg=oracle-java7-installer state=latest update-cache=yes force=yes
  - name: Get Elasticsearch Package
    get_url: url=https://download.elasticsearch.org/elasticsearch/elasticsearch/elasticsearch-1.2.2.deb dest=/home/xplain
  - name: Install Elasticsearch
    shell: dpkg -i elasticsearch-1.2.2.deb
    sudo: yes
  - name: Configure update-rc.d
    shell: update-rc.d elasticsearch defaults 95 10
    sudo: yes
  - name: Install Mapper-Attachments Plugin
    shell: /usr/share/elasticsearch/bin/plugin -install elasticsearch/elasticsearch-mapper-attachments/2.0.0
    sudo: yes
    ignore_errors: true
  - name: Uninstall MongoDB River Plugin (if exists)
    shell: /usr/share/elasticsearch/bin/plugin --remove com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/2.0.1
    sudo: yes
    ignore_errors: true
  - name: Install MongoDB River Plugin
    shell: /usr/share/elasticsearch/bin/plugin --install com.github.richardwilly98.elasticsearch/elasticsearch-river-mongodb/2.0.1
    sudo: yes
    ignore_errors: true
  - name: Install EC2 Plugin
    shell: /usr/share/elasticsearch/bin/plugin -install elasticsearch/elasticsearch-cloud-aws/2.1.1
    sudo: yes
    ignore_errors: true
  - name: Start Elasticsearch Service
    service: name=elasticsearch state=started
    sudo: yes
  - name: Install elasticsearch py
    pip: name=elasticsearch version=1.1.1

  #Redis deployments
  - name: Add APT repository with latest version of redis
    apt_repository: repo='ppa:rwky/redis' state=present update_cache=yes
  - name: Install redis-server
    apt: name=redis-server state=present
  - name: Install redis-py
    pip: name=redis

  - name: Install binaryornot py
    pip: name=binaryornot
  - name: Install boto py
    pip: name=boto

  #REDIS SENTINEL DEPLOYMENT
  - name: Stop running redis server
    service: name=redis-server state=stopped
  - name: Create redis config directory
    file: path=/etc/redis/local owner=redis group=redis mode=777 state=directory
  - name: Create redis log directory
    file: path=/var/log/redis owner=redis group=redis mode=777 state=directory
  - name: Create redis data persistence/dump directory
    file: path=/var/lib/redis owner=redis group=redis mode=777 state=directory

  - name: Copy redis config file
    copy: src=/home/xplain/redis.conf dest=/etc/redis/local/redis.conf owner=redis group=redis mode=0644

  - name: Create redis config directory
    file: path=/var/log/sentinel owner=redis group=redis mode=777 state=directory
  - name: Copy sentinel config file
    template: src=/home/xplain/sentinel.conf dest=/etc/redis/local/sentinel.conf owner=redis group=redis mode=0644
  - name: Write upstart script in /etc/init/redis-sentinel.conf
    copy: src=/home/xplain/redis-sentinel.conf dest=/etc/init/redis-sentinel.conf
  - name: Start sentinel
    service: name=redis-sentinel state=started
  - name: Start running redis server
    service: name=redis-server state=started

  - name: Untar flightpath
    shell: tar -zxf /home/xplain/flightpath-deployment.tar.gz chdir=/
  - name: Copy the service files
    shell: tar -zxf /home/xplain/Baaz-DataAcquisition-Service.tar.gz chdir=/
  - name: Remove any previous service that may be installed.
    shell: update-rc.d -f baazdataacquisition remove
    ignore_errors: True
  - name: Stop dataacquisitionservice
    service: name=dataacquisitionservice state=stopped
    ignore_errors: True
  - name: Start dataacquistiionservice
    service: name=dataacquisitionservice state=started

    #Start of Analytics module deployment.
  - name: Untar Analytics
    shell: tar -zxf /home/xplain/Baaz-Analytics.tar.gz chdir=/
  - name: Install Analytics Service
    shell: tar -zxf /home/xplain/Baaz-Analytics-Service.tar.gz chdir=/
  - name: Install Basestats scripts
    shell: tar -zxf /home/xplain/Baaz-Basestats-Report.tar.gz chdir=/usr/lib
  - name: Stop mathservice
    service: name=mathservice state=stopped
    ignore_errors: True
  - name: Start mathservice
    service: name=mathservice state=started

    #Start of Compiler module deployment.
  - name: Remove the existing compiler deployed code
    file: path=/usr/lib/baaz_compiler state=absent
  - name: Untar Compiler binaries
    shell: tar -zxf /home/xplain/Baaz-Compiler.tar.gz chdir=/usr/lib
  - name: Install Compiler Service
    shell: tar -zxf /home/xplain/Baaz-Compile-Service.tar.gz chdir=/

  - name: Stop compileserver
    action: service name=compileserver state=stopped
    ignore_errors: True
  - name: Stop compileservice
    service: name=compileservice state=stopped
    ignore_errors: True
  - name: Start compileserver
    action: service name=compileserver state=started
  - name: Start compileservice
    service: name=compileservice state=started

  - name: Untar flightpath
    shell: tar -zxf /home/xplain/flightpath-deployment.tar.gz chdir=/
  - name: Copy node upstart configuration file
    template: src=/home/xplain/nodejs.conf dest=/etc/init/nodejs.conf
  - name: Copy api upstart configuration file
    template: src=/home/xplain/api_nodejs.conf dest=/etc/init/api_nodejs.conf
  - name: Copy xplain_admin upstart configuration file
    copy: src=/home/xplain/xplain_admin.conf dest=/etc/init/xplain_admin.conf
  - name: Copy ruleengine upstart configuration file
    copy: src=/home/xplain/ruleengineservice.conf dest=/etc/init/ruleengineservice.conf
  - name: Untar Baazdata App
    shell: tar -zxf /home/xplain/xplain.io.tar.gz
  - name: Remove the existing deployed code
    file: path=/var/xplain{{ port }} state=absent
  - name: Move the new code
    shell: mv /home/xplain/xplain.io /var/xplain{{ port }}
  - name: Install npm modules.
    npm: path=/var/xplain{{ port }} production=yes
  - name: copy monitrc file
    copy: src=/home/xplain/monitrc dest=/etc/monit/monitrc
  - name: Install python logger package
    pip: name=rlog
    sudo: yes
  - name: Install python logger package
    pip: name=mock
    sudo: yes
  - name: Install python logger package
    pip: name=six extra_args='--upgrade'
    sudo: yes
  - name: Install python logger package
    pip: name=pbr
    sudo: yes
  - name: Install python logger package
    pip: name=funcsigs
    sudo: yes
