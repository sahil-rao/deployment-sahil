description "Redis Sentinel"
author "Prithviraj Pandian <prithvi@xplain.io>"

# Run once redis-server is up
start on started redis-server
stop on shutdown

respawn
respawn limit 10 5

# Run redis as correct user, instead of root
setuid redis
setgid redis

post-start script

    new=$(/usr/local/bin/new_set.sh)
    hostname=$(/usr/local/bin/get_master_hostname.sh)
    masterip=$(/usr/local/bin/get_master_ip.sh)
    myip=`/sbin/ifconfig eth0 | grep "inet addr" | awk -F: '{print $2}' | awk '{print $1}'`

    # If we are not new, we need to find a master to become a slave of
    if [ "x$new" = "xno" ]; then
	# Direct this sentinel instance to monitor the master with name same as the hostname
	redis-cli -p 26379 sentinel monitor $hostname $masterip 6379 2
    else 
        # If we are a new set, then we are the master. So sentinel is directed to monitor the server running on the same machine
        redis-cli -p 26379 sentinel monitor $hostname $myip 6379 2
    fi

    # These sentinel directives necessary regardless of whether we are the master/slave
    redis-cli -p 26379 sentinel set $hostname down-after-milliseconds 30000
    redis-cli -p 26379 sentinel set $hostname parallel-syncs 1
    redis-cli -p 26379 sentinel set $hostname failover-timeout 180000

end script


exec /usr/bin/redis-sentinel /etc/redis/local/sentinel.conf


