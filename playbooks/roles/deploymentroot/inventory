#!/usr/bin/python

import datetime
import sys
import json
import os
import shlex

# for this module, we're going to do key=value style arguments
# this is up to each module to decide what it wants, but all
# core modules besides 'command' and 'shell' take key=value
# so this is highly recommended

def update_inventory_file(group, hosts):

    groups = {"default" : set()}
    group_name = "default"
    # Read the file in memory
    with open("/etc/ansible/hosts", "r") as inventory_file:
        for line in inventory_file:
            line = line.strip()
            if len(line) == 0:
                continue

            if line[0] == "#":
                continue
            if line.startswith("["):
                group_name = line[1:-1]
                groups[group_name] = set()
            else:
                groups[group_name].add(line)

    if group not in groups:
        groups[group] = set()

    hosts_splits = hosts.split(",")
    for h in hosts_splits:
        groups[group].add(h)

    with open("/etc/ansible/hosts", "w") as inventory_file:
        for gr in groups:
            host_list  = list(groups[gr])
            if not gr == "default":
                inventory_file.write("\n[{0}]\n".format(gr))
            for h in host_list:
                inventory_file.write("{0}\n".format(h))

    #    inventory_file.write("[{0}]\n".format(group))
    #    for h in hosts_splits:
    #        inventory_file.write("{0}\n".format(h))
    #with open("/etc/ansible/hosts", "a") as inventory_file:
    #    inventory_file.write("[{0}]\n".format(group))
    #    for h in hosts_splits:
    #        inventory_file.write("{0}\n".format(h))
        
def main():
    module = AnsibleModule(
        argument_spec = dict(
            group=dict(default=None),
            hosts=dict(default=None)
        )
    )

    hosts = module.params["hosts"]
    group = module.params["group"]
    if hosts is None or group is None:
        module.fail_json(msg="Not all parameters provided")
    else:
        update_inventory_file(group, hosts)
        module.exit_json(changed=True, msg="Success")

# import module snippets
from ansible.module_utils.basic import *
main()    
